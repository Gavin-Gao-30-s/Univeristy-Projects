LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
USE ieee.std_logic_arith.ALL;
USE ieee.std_logic_unsigned.ALL;
LIBRARY work;
LIBRARY altera_mf;
USE altera_mf.all;

ENTITY instruction_memory IS
    PORT (
        address  : IN  std_logic_vector(7 DOWNTO 0); -- 8-bit address for 256 locations
        instruction : OUT std_logic_vector(31 DOWNTO 0)
    );
END instruction_memory;

ARCHITECTURE rtl OF instruction_memory IS
    TYPE rom_type IS ARRAY (0 TO 255) OF std_logic_vector(31 DOWNTO 0);
    
    -- Instruction memory initialization using hex values
    CONSTANT rom : rom_type := (
        X"8C020000", -- lw $2, 0($0)
        X"8C030001", -- lw $3, 1($0)
        X"00430820", -- add $1, $2, $3
        X"AC010003", -- sw $1, 3($0)
        X"1022FFFF", -- beq $1, $2, -4
        X"1021FFFA", -- beq $1, $1, -24
        OTHERS => X"00000000" -- Default nop instructions
    );
BEGIN
    instruction <= rom(CONV_INTEGER(address));
END rtl;
